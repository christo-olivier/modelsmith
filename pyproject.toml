[tool.poetry]
name = "modelsmith"
version = "0.2.1"
description = "Get Pydantic models and Python types as LLM responses from Google Vertex AI models."
authors = ["Christo Olivier <mail@christoolivier.com>"]
maintainers = ["Christo Olivier <mail@christoolivier.com>"]
homepage = "https://github.com/christo-olivier/modelsmith"
repository = "https://github.com/christo-olivier/modelsmith"
keywords = ["vertexai", "pydantic", "models", "types", "llm"]
license = "MIT"
readme = "README.md"
packages = [{include = "modelsmith", from = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
tenacity = "^8.2.3"
google-cloud-aiplatform = "^1.43.0"
pydantic = "^2.6.4"
jinja2 = "^3.1.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
python-levenshtein = "^0.25.0"
mypy = "^1.9.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

[tool.mypy]
plugins = ["pydantic.mypy"]
python_version = "3.12"
ignore_missing_imports = true
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = false
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true

[pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true